- name: "OSX - Install Python & pip - Versions 2 & 3"
  block:
    - name: "OSX - Install Python - Versions 2 & 3"
      homebrew:
        name: "{{ item }}"
        state: latest
        update_homebrew: yes
      with_items:
        - python@2
        - python
      # https://brew.sh/2018/01/19/homebrew-1.5.0/
      # https://news.ycombinator.com/item?id=16186770
      become: no
  when: ansible_os_family == "Darwin"

- name: "UBUNTU - Install Python & pip - Versions 2 & 3"
  block:
    - name: "UBUNTU - Install Python - Versions 2 & 3"
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      with_items:
        - python-dev
        - python3-dev
      become: yes
    - name: "UBUNTU - Check if `pip` installed"
      shell: "command -v pip >/dev/null 2>&1"
      ignore_errors: yes
      register: pip_exist
    - name: "UBUNTU - Check if `pip3` installed"
      shell: "command -v pip3 >/dev/null 2>&1"
      ignore_errors: yes
      register: pip3_exist
    - name: "UBUNTU - Install system version of `pip` if no `pip` installed"
      apt:
        name: python-pip
        state: latest
        update_cache: yes
      become: yes
      when: pip_exist.rc != 0
    - name: "UBUNTU - Install system version of `pip3` if no `pip3` installed"
      apt:
        name: python3-pip
        state: latest
        update_cache: yes
      become: yes
      when: pip3_exist.rc != 0
  when: ansible_os_family == "Debian"


- name: "Install `pip` & `pip3` (pypa versions)"
  # To update `pip3` the correct command is `pip3 install -U --user pip`
  # NOT: `pip install -U --user pip3` --> `pip3` doesn't exist
  pip:
    name: pip
    executable: "{{ item }}"
    state: latest
    extra_args: --user
  with_items:
    - pip
    - pip3
  become: no

- name: "UBUNTU - Remove system `pip` & `pip3` (keep only pypa version)"
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - python-pip
    - python3-pip
  become: yes
  when: ansible_os_family == "Debian"

- name: "UN-Install virtualenv & virtualenvwrapper for Python 2"
  pip:
    name: "{{ item }}"
    executable: pip
    state: absent
  with_items:
    - virtualenv
    - virtualenvwrapper
  become: no

- name: "Install virtualenv & virtualenvwrapper for Python 3"
  pip:
    name: "{{ item }}"
    executable: pip3
    state: latest
    extra_args: --user
  with_items:
    - virtualenv
    - virtualenvwrapper
  become: no
