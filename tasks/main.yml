- name: "Install Python & pip - Versions 2 & 3 - UBUNTU"
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - python-dev
    - python-pip
    - python3-dev
    - python3-pip
  become: yes
  when: ansible_os_family == "Debian"

- name: "Install Python & pip - Versions 2 & 3 - OSX"
  block:
    - name: "Install Python - Versions 2 & 3 - OSX"
      homebrew:
        name: "{{ item }}"
        state: latest
        update_homebrew: yes
      with_items:
        - python@2
        - python
      # https://brew.sh/2018/01/19/homebrew-1.5.0/
      # https://news.ycombinator.com/item?id=16186770
      become: no
  when: ansible_os_family == "Darwin"

- name: "Install `pip` & `pip3` (pypa versions)"
  # To update `pip3` the correct command is `pip3 install -U --user pip`
  # NOT: `pip install -U --user pip3` --> `pip3` doesn't exist
  pip:
    name: pip
    executable: "{{ item }}"
    state: latest
    extra_args: --user
  with_items:
    - pip
    - pip3
  become: no

- name: "Remove system `pip` (keep only pypa version) - UBUNTU"
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - python-pip
    - python3-pip
  become: yes
  when: ansible_os_family == "Debian"

- name: "UN-Install virtualenv & virtualenvwrapper for Python 2"
  block:
    - name: "UN-Install virtualenv & virtualenvwrapper for Python 2 - User version"
      pip:
        name: "{{ item }}"
        executable: pip
        state: absent
      with_items:
        - virtualenv
        - virtualenvwrapper
      become: no
    - name: "UN-Install virtualenv & virtualenvwrapper for Python 2 - System/Global version"
      pip:
        name: "{{ item }}"
        executable: pip
        state: absent
      with_items:
        - virtualenv
        - virtualenvwrapper
      become: yes

- name: "Install virtualenv & virtualenvwrapper for Python 3"
  pip:
    name: "{{ item }}"
    executable: pip3
    state: latest
    extra_args: --user
  with_items:
    - virtualenv
    - virtualenvwrapper
  become: no
